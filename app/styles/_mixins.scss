@use "sass:list";

.d-col-flex{
  display: flex;
  flex-direction: column;
}

.invert-color {
  filter: #{'invert()'};
}

.h-100{height: 100%;}
.h-100vh{min-height: 100vh;}

// -----------------------------
// VARIABLES
// -----------------------------

// Breakpoints
$breakpoints: (
  '': null,
  'xs': 1px,
  'sm': 576px,
  'md': 768px,
  'lg': 992px,
  'xl': 1200px
);

// Alineaciones horizontal (l, c, r) y vertical (t, c, b)
$justify-map: (
  'l': flex-start,
  'c': center,
  'r': flex-end
);

$align-map: (
  't': flex-start,
  'c': center,
  'b': flex-end
);

// Rango de font-weight
$font-weights: 100, 200, 300, 400, 500, 600, 700, 800, 900;

// Rango de font-size
$font-sizes: 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20,
             21, 22, 23, 24, 25, 26, 27, 28, 29, 30,
             31, 32, 33, 34, 35, 36, 37, 38, 39, 40,
             41, 42, 43, 44, 45, 46, 47, 48, 49, 50;

// Rango de opacidades
$opacities: 0, .1, .2, .3, .4, .5, .6, .7, .8, .9, 1;

// -----------------------------
// MIXINS
// -----------------------------

// Alineaci√≥n flex
@mixin generate-align-classes($prefix: '') {
  @each $jkey, $jval in $justify-map {
    @each $akey, $aval in $align-map {
      .#{$prefix}align-#{$jkey}-#{$akey} {
        display: flex;
        justify-content: #{$jval};
        align-items: #{$aval};
      }
    }
  }
}

// Font weight
@mixin generate-font-weight-classes($prefix: '') {
  @each $fw in $font-weights {
    .#{$prefix}fw-#{$fw} {
      font-weight: $fw !important;
    }
  }
}

// Font size
@mixin generate-font-size-classes($prefix: '') {
  @each $fz in $font-sizes {
    .#{$prefix}fz-#{$fz} {
      font-size: #{$fz}px !important;
    }
  }
}

// Opacity
@mixin generate-opacity-classes($prefix: '') {
  @for $i from 0 through 10 {
    $value: list.nth($opacities, $i + 1);
    .#{$prefix}op-#{$i} {
      opacity: $value !important;
    }
  }
}

// -----------------------------
// CLASSES BY BREAKPOINT
// -----------------------------

@each $label, $min in $breakpoints {
  @if $min == null {
    // Global (sin media query)
    @include generate-align-classes('');
    @include generate-font-weight-classes('');
    @include generate-font-size-classes('');
    @include generate-opacity-classes('');
  } @else {
    @media (min-width: $min) {
      @include generate-align-classes('align-#{$label}-');
      @include generate-font-weight-classes('fw-#{$label}-');
      @include generate-font-size-classes('fz-#{$label}-');
      @include generate-opacity-classes('op-#{$label}-');
    }
  }
}